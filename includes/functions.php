<?php
$server_name = $_SERVER["SERVER_NAME"];
$directory = (isset($_SERVER["HTTPS"]) ? "https" : "http") . "://" . $server_name . "/";
$queryFunctionGeneral = mysqli_query($conn, "SELECT * FROM general WHERE id = '1'");
if(mysqli_num_rows($queryFunctionGeneral) > 0){
    $rowFunctionGeneral = mysqli_fetch_array($queryFunctionGeneral);
    $domain = $rowFunctionGeneral['domain'];
    $gen_name = $rowFunctionGeneral['site_name'];
    $full_gen_name = $rowFunctionGeneral['site_name'];
    $gen_email = $rowFunctionGeneral['site_email'];
    $gen_phone = $rowFunctionGeneral['site_phone'];
}

$date_year = date("Y");
$date = date("Y-m-d");
$date_time = date("Y-m-d H:i:s");
$ticket_id = date("YmdHis");
$rand_no = rand(1000,9999);
$new_otp = rand(111111,999999);
$foot_note = "<b>Note:</b> This email is autogenerated. Please do not reply.";
$regards = "<p>&nbsp;</p><p>Regards,<br>{$gen_name} Team.</p>";
$pay_regards = "<p>&nbsp;</p><p>Regards,<br>swiftstock Team.</p>";

function Dot2LongIP ($IPaddr)
{
    if($IPaddr == ""){
        return 0;
    }else{
        $ips = explode(".", "$IPaddr");

// print_r($ips); exit();
        // return ($ips[3] + $ips[2] * 256 + $ips[1] * 256 * 256 + $ips[0] * 256 * 256 * 256);
    }
}

function get_country_data($ip, $data, $conn){
    global $db2;
    $country_data = "";
    $ipno = Dot2LongIP($ip);
    $result_ip = mysqli_query($conn, "SELECT * FROM iplocation2 WHERE ip_from <= '{$ipno}' AND ip_to >= '{$ipno}' ORDER BY ip_to LIMIT 1");
    if(mysqli_num_rows($result_ip) > 0){
        $row_ip = mysqli_fetch_array($result_ip);
        $country_data = $row_ip[$data];
    }
    return $country_data;
}

function get_client_ip(){
    $ip = "";
    if(!empty($_SERVER['HTTP_CLIENT_IP'])){
        //ip from share internet
        $ip = $_SERVER['HTTP_CLIENT_IP'];
    }elseif(!empty($_SERVER['HTTP_X_FORWARDED_FOR'])){
        //ip pass from proxy
        $ip = $_SERVER['HTTP_X_FORWARDED_FOR'];
    }else{
        $ip = $_SERVER['REMOTE_ADDR'];
    }
    return $ip;
}

function ip_info($ip = NULL, $purpose = "location", $deep_detect = TRUE) {
    $output = NULL;
    if (filter_var($ip, FILTER_VALIDATE_IP) === FALSE) {
        $ip = $_SERVER["REMOTE_ADDR"];
        if ($deep_detect) {
            if (filter_var(@$_SERVER['HTTP_X_FORWARDED_FOR'], FILTER_VALIDATE_IP))
                $ip = $_SERVER['HTTP_X_FORWARDED_FOR'];
            if (filter_var(@$_SERVER['HTTP_CLIENT_IP'], FILTER_VALIDATE_IP))
                $ip = $_SERVER['HTTP_CLIENT_IP'];
        }
    }
    $purpose    = str_replace(array("name", "\n", "\t", " ", "-", "_"), NULL, strtolower(trim($purpose)));
    $support    = array("country", "countrycode", "state", "region", "city", "location", "address");
    $continents = array(
        "AF" => "Africa",
        "AN" => "Antarctica",
        "AS" => "Asia",
        "EU" => "Europe",
        "OC" => "Australia (Oceania)",
        "NA" => "North America",
        "SA" => "South America"
    );
    if (filter_var($ip, FILTER_VALIDATE_IP) && in_array($purpose, $support)) {
        $ipdat = @json_decode(file_get_contents("http://www.geoplugin.net/json.gp?ip=" . $ip));
        if (@strlen(trim($ipdat->geoplugin_countryCode)) == 2) {
            switch ($purpose) {
                case "location":
                $output = array(
                    "city"           => @$ipdat->geoplugin_city,
                    "state"          => @$ipdat->geoplugin_regionName,
                    "country"        => @$ipdat->geoplugin_countryName,
                    "country_code"   => @$ipdat->geoplugin_countryCode,
                    "continent"      => @$continents[strtoupper($ipdat->geoplugin_continentCode)],
                    "continent_code" => @$ipdat->geoplugin_continentCode
                );
                break;
                case "address":
                $address = array($ipdat->geoplugin_countryName);
                if (@strlen($ipdat->geoplugin_regionName) >= 1)
                    $address[] = $ipdat->geoplugin_regionName;
                if (@strlen($ipdat->geoplugin_city) >= 1)
                    $address[] = $ipdat->geoplugin_city;
                $output = implode(", ", array_reverse($address));
                break;
                case "city":
                $output = @$ipdat->geoplugin_city;
                break;
                case "state":
                $output = @$ipdat->geoplugin_regionName;
                break;
                case "region":
                $output = @$ipdat->geoplugin_regionName;
                break;
                case "country":
                $output = @$ipdat->geoplugin_countryName;
                break;
                case "countrycode":
                $output = @$ipdat->geoplugin_countryCode;
                break;
            }
        }
    }
    return $output;
    
}

$country_ip = $country_code = $country = "";

$country_ip = get_client_ip();
$country_code = get_country_data($country_ip, "country_code", $conn);
$country = $country_code;


if ($country == "NG") {
    $currency = "â‚¦";
    $sql_prize = mysqli_query($conn, "SELECT * From country where code = 'NG'");
    $row_prize = mysqli_fetch_array($sql_prize);
    $country_pay = "NGN";
    $default_country = "NG";
}else{
    $currency = "$";
    $sql_prize = mysqli_query($conn, "SELECT * FROM country WHERE code='US'");
    $row_prize = mysqli_fetch_array($sql_prize);
    $country_pay = "USD";
    $default_country = "USA";
}


$currency_value = 450;


/*sending mail*/



function message_template( $subject, $message, $foot_note, $regards, $directory, $domain, $gen_email, $gen_phone)
{
    $result = "
    <html>
    <head>
    <title>{$subject}</title>
    </head>
    <body>

    <div style=\"background:#f9f9f9 !important; padding:10px !important; font-family:Arial, Helvetica, sans-serif; font-size:14px !important;\">
    <div style=\"margin:auto !important; width:100% !important; max-width:800px !important;\">

    <div style=\"padding:10px !important; width: 100px !important; padding-top:30px !important;\">
    <img src=\"https://$domain/assets/images/logo/logo2.png\" style=\"width: 200px !important;\">
    </div>

    <div style=\"min-height:300px !important; padding:10px !important; background:#fff !important;\">

    {$message}
    {$regards}
    </div>

    <p style=\"font-size:14px !important;\">
    <span style=\"font-weight:bold !important;\">Email:</span> {$gen_email},<br>
    <span style=\"font-weight:bold !important;\">Phone:</span> {$gen_phone},<br>
    <span style=\"font-weight:bold !important;\">Website:</span> <a href=\"{$directory}\" style=\"color:#f33 !important; text-decoration:none !important;\">{$domain}</a>.
    </p>";
    $result .= (!empty($foot_note)) ? "<p style=\"background:#ddd !important;font-size:12px !important; padding:10px !important; overflow:hidden !important;\">{$foot_note}</p>" : "";
    $result .= "</div>
    </div>

    <div style=\"background:#966 !important; padding:10px !important; overflow:hidden !important; text-align:center !important; font-family:Arial, Helvetica, sans-serif; font-size:14px !important;\">
    <a href=\"{$directory}\" style=\"color:#fff !important; text-decoration:none !important; padding:10px !important;\">Home</a>
    <a href=\"{$directory}about\" style=\"color:#fff !important; text-decoration:none !important; padding:10px !important;\">About Us</a>
    <a href=\"{$directory}contact\" style=\"color:#fff !important; text-decoration:none !important; padding:10px !important;\">Contact Us</a>
    </div>

    </body>
    </html>";
    return $result;
}


function send_mail($to, $subject, $message, $headers, $gen_email)
{
    

    $message = wordwrap($message, 70);
// Always set content-type when sending HTML email
    $headers2 = $headers;
    $headers = "MIME-Version: 1.0" . "\r\n";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r\n";
    $headers .= "From: $headers2 <$gen_email>" . "\r\n";
    $headers .= "BCC: $gen_email" . "\r\n";

    $result = mail($to, $subject, $message, $headers);
    return $result;
}

///////////===============Mail===================///////////////
function multi_attach_mail($to, $subject, $message, $senderMail, $senderName, $files)
{

    $from = $senderName . " <" . $senderMail . ">";
    $headers = "From: $from";

    // boundary
    $semi_rand = md5(time());
    $mime_boundary = "==Multipart_Boundary_x{$semi_rand}x";

    // headers for attachment
    $headers .= "\nMIME-Version: 1.0\n" . "Content-Type: multipart/mixed;\n" . " boundary=\"{$mime_boundary}\"";

    // multipart boundary
    $message = "--{$mime_boundary}\n" . "Content-Type: text/html; charset=\"UTF-8\"\n" .
    "Content-Transfer-Encoding: 7bit\n\n" . $message . "\n\n";

    // preparing attachments
    if (count($files) > 0) {
        for ($i = 0; $i < count($files); $i++) {
            if (is_file($files[$i])) {
                $message .= "--{$mime_boundary}\n";
                $fp = @fopen($files[$i], "rb");
                $data = @fread($fp, filesize($files[$i]));

                @fclose($fp);
                $data = chunk_split(base64_encode($data));
                $message .= "Content-Type: application/octet-stream; name=\"" . basename($files[$i]) . "\"\n" .
                "Content-Description: " . basename($files[$i]) . "\n" .
                "Content-Disposition: attachment;\n" . " filename=\"" . basename($files[$i]) . "\"; size=" . filesize($files[$i]) . ";\n" .
                "Content-Transfer-Encoding: base64\n\n" . $data . "\n\n";
            }
        }
    }

    $message .= "--{$mime_boundary}--";
    $returnpath = "-f" . $senderMail;

    //send email
    $mail = @mail($to, $subject, $message, $headers, $returnpath);

    //function return true, if email sent, otherwise return fasle
    if ($mail) {
        return TRUE;
    } else {
        return FALSE;
    }

}

function page_numbers()
{
    global $result, $per_view, $page_link, $link_suffix, $style_class, $center_pages, $pn, $sub1, $last_page, $count, $add_attr;
    $count = (empty($count)) ? mysqli_num_rows($result) : $count;

///////////////////////////////////////////////////////
    $pn = (isset($_REQUEST["pn"]) && !empty($_REQUEST["pn"])) ? preg_replace("#[^0-9]#i", "", $_REQUEST["pn"]) : 1;
    $total = $count;

    $last_page = ceil($total / $per_view);

    if ($pn < 1) {
        $pn = 1;
    } else if ($pn > $last_page && !empty($last_page)) {
        $pn = $last_page;
    }

    $center_pages = "";
    $sub4 = $pn - 4;
    $sub3 = $pn - 3;
    $sub1 = $pn - 1;
    $sub2 = $pn - 2;
    $add1 = $pn + 1;
    $add2 = $pn + 2;
    $add3 = $pn + 3;
    $add4 = $pn + 4;

    $center_pages .= ($pn > 1 && $last_page > 1) ? "<a href=\"{$page_link}{$sub1}{$link_suffix}\" {$add_attr} class=\"{$style_class}\">Previous</a>" : "";
    $center_pages .= ($sub4 > 0 && $add1 > $last_page && $last_page > 1) ? "<a href=\"{$page_link}{$sub4}{$link_suffix}\" {$add_attr} class=\"{$style_class}\">{$sub4}</a>" : "";
    $center_pages .= ($sub3 > 0 && $add2 > $last_page && $last_page > 1) ? "<a href=\"{$page_link}{$sub3}{$link_suffix}\" {$add_attr} class=\"{$style_class}\">{$sub3}</a>" : "";
    $center_pages .= ($sub2 > 0 && $last_page > 1) ? "<a href=\"{$page_link}{$sub2}{$link_suffix}\" {$add_attr} class=\"{$style_class}\">{$sub2}</a>" : "";
    $center_pages .= ($sub1 > 0 && $last_page > 1) ? "<a href=\"{$page_link}{$sub1}{$link_suffix}\" {$add_attr} class=\"{$style_class}\">{$sub1}</a>" : "";
    $center_pages .= ($last_page > 1) ? "<a href=\"{$page_link}{$pn}{$link_suffix}\" {$add_attr} class=\"current {$style_class}\">{$pn}</a>" : "";
    $center_pages .= ($add1 <= $last_page && $last_page > 1) ? "<a href=\"{$page_link}{$add1}{$link_suffix}\" {$add_attr} class=\"{$style_class}\">{$add1}</a>" : "";
    $center_pages .= ($add2 <= $last_page && $last_page > 1) ? "<a href=\"{$page_link}{$add2}{$link_suffix}\" {$add_attr} class=\"{$style_class}\">{$add2}</a>" : "";
    $center_pages .= ($sub2 < 1 && $add3 <= $last_page && $last_page > 1) ? "<a href=\"{$page_link}{$add3}{$link_suffix}\" {$add_attr} class=\"{$style_class}\">{$add3}</a>" : "";
    $center_pages .= ($sub1 < 1 && $add4 <= $last_page && $last_page > 1) ? "<a href=\"{$page_link}{$add4}{$link_suffix}\" {$add_attr} class=\"{$style_class}\">{$add4}</a>" : "";
    $center_pages .= ($pn < $last_page && $last_page > 1) ? "<a href=\"{$page_link}{$add1}{$link_suffix}\" {$add_attr} class=\"{$style_class}\">Next</a>" : "";
}

function test_input($conn, $data) {
    global $db1;
    $data = trim($data);
    $data = preg_replace('/\s+/', ' ', $data);
    $data = htmlentities($data, ENT_QUOTES);
    $data = mysqli_real_escape_string($conn, $data);
    return $data;
}

function testTotal($conn, $amount){
    $amountReturn = preg_replace('#[^0-9.]#i', '', $amount);
    $amountReturn = test_input($conn, $amountReturn);
    $amountReturn = str_replace(",","",$amountReturn);
    $amountReturn = str_replace("-","",$amountReturn);
    $amountPos = strpos($amountReturn,".");
    if($amountPos > 0){
        $amountReturn = substr($amountReturn,0,$amountPos+3);
    }
    return $amountReturn;
}

function tp_input($conn, $data) {
    $data = ($_SERVER["REQUEST_METHOD"] == "POST" && !empty($_POST[$data])) ? test_input($conn, $_POST[$data]):"";
    return $data;
}

function get_input($conn, $data) {
    $data = ($_SERVER["REQUEST_METHOD"] == "GET" && !empty($_GET[$data])) ? test_input($conn, $_GET[$data]):"";
    return $data;
}

function nr_input($conn, $data){
    $data = (isset($_REQUEST[$data]) && !empty($_REQUEST[$data])) ? testTotal($conn, $_REQUEST[$data]) : "";
    return $data;
}

function tr_input($conn, $data) {
    $data = (isset($_REQUEST[$data]) && !empty($_REQUEST[$data]))?test_input($conn, $_REQUEST[$data]):"";
    return $data;
}
function random_strings($length_of_string) {  
  $str_result = 'qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM1234567890'; 
  return substr(str_shuffle($str_result),  
   0, $length_of_string); 
} 
function random_strings_no($length_of_string) {  
  $str_result = '1234567890'; 
  return substr(str_shuffle($str_result),  
   0, $length_of_string); 
} 
// function check_privilege($conn, $email)
// {
//     $result = 0;
//     $privilege_query = mysqli_query($conn, "SELECT * FROM users WHERE email = '$email' and is_admin = '1'");
//     if(mysqli_num_rows($privilege_query) > 0){
//         $result = 1;
//     }
//     return $result;
// }

function payment_process1($email, $amount, $country_pay, $country, $ref, $plan, $next_link){
    
    /////=============Paystack Process=============//////

    $url = "https://api.paystack.co/transaction/initialize";

    // get your public key from the dashboard.


    // $public_key = "pk_test_f40ad8e9f4a3fd0a771e11556b768776df8013e4";
    // $secret_key = "sk_test_1bf7f87cdebfd61b0cfe2afd7d3be342d80382ea";
    
    $public_key = "pk_live_ae99d2527337e8019865bba9632a70492836c423"; 
    $secret_key = "sk_live_eb1c7d3ff513058056a2b2b63f89a559065cf97f";
    


    $redirect_url = "https://norvas.org/".$next_link;
    $ref = $ref;
    $payment_plan = ""; // this is only required for recurring payments.
    
    
        $country = "NG";


    $fields = [
        'email' => $email, 
        'amount'=>$amount*100,
        'country'=>$country,
        'currency'=>$country_pay,
        'reference'=>$ref,
        'public_key'=>$public_key,
        'callback_url' => "https://norvas.org/".$next_link."?amount=".$amount."&email=".$email."&ref=".$ref."&plan=".$plan."&ssiref=".$ref,
        'payment_plan'=> $plan
    ];
    $fields_string = http_build_query($fields);
      //open connection
    $ch = curl_init();

    //set the url, number of POST vars, POST data
    curl_setopt($ch,CURLOPT_URL, $url);
    curl_setopt($ch,CURLOPT_POST, true);
    curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);
    curl_setopt($ch, CURLOPT_HTTPHEADER, array(
        "Authorization: Bearer ".$secret_key,
        "Cache-Control: no-cache",
    ));

    //So that curl_exec returns the contents of the cURL; rather than echoing it
    curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); 
    
    //execute post 
    $result = curl_exec($ch);
    $transaction = json_decode($result);
    if(!$transaction->data && !$transaction->data->authorization_url){
    // there was an error from the API
        print_r('API returned error: ' . $transaction->data->message);
    }
    echo "<script> window.location.href = '".$transaction->data->authorization_url."'; </script>";
}



    function payment_process1_paypal($email, $amount, $country_pay, $country, $ref, $plan, $next_link){

        $paypal_url = "https://www.paypal.com/cgi-bin/webscr"; // Test Paypal API URL
        // $paypal_id = "admin@betensured.com"; // Business email ID
        $paypal_id = "support@norvas.org"; // Business email ID
        $item_number = $ref;
        $item_name = "Payment for " . $plan . " Plan";
        $logo = "images/norvas_logo_main2.jpg";
        $_SESSION["trans_ref"] = $item_number;

        $invoice_id = mysqli_query($conn, "SELECT * FROM custom_product_order WHERE ref = '$item_number'");
        $row_invoice = mysqli_fetch_array($invoice_id);
        $invoice_id = $row_invoice['id'];
        $success = 0;
        $fail = 1;
        $success_hash = sha1($item_number.$invoice_id.$success);
        $fail_hash = sha1($item_number.$invoice_id.$fail);
        ?>
        <body onLoad="javascript: document.pp_frm.submit();">
        <form name="pp_frm" action="<?php echo $paypal_url; ?>" method="post">
            <input type="hidden" name="business" value="<?php echo $paypal_id; ?>">
            <input type="hidden" name="cmd" value="_xclick">
            <input type="hidden" name="item_name" value="<?php echo $item_name; ?>">
            <input type="hidden" name="item_number" value="<?php echo $item_number; ?>">
            <input type="hidden" name="credits" value="1">
            <input type="hidden" name="userid" value="<?php echo $email; ?>">
            <input type="hidden" name="amount" value="<?php echo $amount; ?>">
            <input type="hidden" name="cpp_header_image" value="<?php echo $logo; ?>">
            <input type="hidden" name="no_shipping" value="1">
            <input type="hidden" name="currency_code" value="USD">
            <input type="hidden" name="handling" value="0">
            <input type="hidden" name="cancel_return" value="https://norvas.org/<?php echo $next_link ?>?a=<?php echo $item_number; ?>&b=<?php echo $fail_hash; ?>&amount=<?php echo $amount ?>&email=<?php echo $email ?>&ref=<?php echo $ref ?>&plan=<?php echo $plan ?>&ssiref=<?php echo $ref ?>">
            <input type="hidden" name="return" value="https://norvas.org/<?php echo $next_link ?>?a=<?php echo $item_number; ?>&b=<?php echo $success_hash; ?>&c=success&email=<?php echo $email ?>&ref=<?php echo $ref ?>&plan=<?php echo $plan ?>&ssiref=<?php echo $ref ?>">
        </form>
        </body>
        <?php
    }

function payment2_paypal($ref, $b, $amount, $transref){
    $message = $response = "";

    $success = 0;
    $fail = 1;
    $invoice_id = mysqli_query($conn, "SELECT * FROM custom_product_order WHERE ref = '$item_number'");
    $row_invoice = mysqli_fetch_array($invoice_id);
    $invoice_id = $row_invoice['id'];

    $success_hash = sha1($transref.$invoice_id.$success);
    $fail_hash = sha1($transref.$invoice_id.$fail);

    $success_hash2 = sha1($a.$invoice_id.$success);
    $fail_hash2 = sha1($a.$invoice_id.$fail);

    if($success_hash == $success_hash2 && $success_hash == $b){

        $response = "Successful";
        $update_status = "Account Already Updated";

        }else if($fail_hash == $fail_hash2 && $fail_hash == $b){

        $response = "Failed";
        $message = "<table class=\"table table-striped table-hover\">
        <tr><th>Total Amount:</th><td>$" . formatNumber($amount) . "</td></tr>
        <tr><th>Transaction Reference ID:</th><td>" . $transref . "</td></tr>
        <tr><th>Transaction Status:</th><td>" . $response . "</td></tr>
        </table>";
    ?>

    <style>
    <!--
    div table thead tr th, div table tr th, div table tbody tr td, div table tr td{
    text-align:left !important;
    }
    -->
    </style>
    <div class="az-content-body">
           
            <div class="col-lg-12 mg-t-20">
                <div class="card card-table-two">
                    <h3 class="card-title">PayPal Payment Response</h3>
    <br />
    <div>

    <?php echo $message; ?>

    </div>

    <?php $users = "users/new-index"; ?>
            <div class="bottom-edit text-right">
                <div>
                    
                    </div>
                <a href="<?php echo $users; ?>"
                   class="btn btn-danger btn-rounded">Back to Dashboard
                </a>
            </div>
            </div>
            
        </div>
    <?php

    }
}

    
function payment2(){
    $data_string = json_encode($query);

    $transaction_id = $_GET["trxref"];
    // $transaction_id = $_GET["ssiref"];
    $curl = curl_init();
    // $secret_key = "sk_test_20baee5b886efdfc7aefdccb8faed10e09090040";
    $secret_key = "sk_live_eb1c7d3ff513058056a2b2b63f89a559065cf97f";
    curl_setopt_array($curl, array(
      CURLOPT_URL => "https://api.paystack.co/transaction/verify/".$transaction_id,
      CURLOPT_RETURNTRANSFER => true,
      CURLOPT_ENCODING => "",
      CURLOPT_MAXREDIRS => 10,
      CURLOPT_TIMEOUT => 30,
      CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
      CURLOPT_CUSTOMREQUEST => "GET",
      CURLOPT_HTTPHEADER => array(
        "Authorization: Bearer ".$secret_key,
        "Cache-Control: no-cache",
     ),
    ));
    
    $response = curl_exec($curl);
    
    // $err = curl_error($curl);
    curl_close($curl);
    
    // if ($err) {
    //     $this->verified = false;
    //     return false;
    // } 
    // else 
    // {
    $response = json_decode($response);
    
    $transStatus = $response->data->status;
    $transDescr = $response->data->message;
    
    $paymentStatus = $chargeAmount = $chargeCurrency = "";
    if($transStatus == "success") 
    {
      $paymentStatus = $response->data->status;
      $chargeAmount = $response->data->amount;
      $chargeCurrency = $response->data->currency;
    }
        // print_r ($response);
        // exit;
    
    // }
    
    
    $response_code = (($transStatus == "success") && ($chargeAmount == $amount2)  && ($chargeCurrency == $currency))?"00":"11";
    
    $response_description = (($transStatus == "success") && ($chargeAmount == $amount2)  && ($chargeCurrency == $currency))?"Successful Transaction":$transDescr;
    
    $update_status = "";
}

function check_privilege($conn, $email, $data)
{

    $result = 0;
    $queryrole_id = mysqli_query($conn, "SELECT * FROM users WHERE email = '$email'");
    if(mysqli_num_rows($queryrole_id) > 0){
        $rowRole = mysqli_fetch_array($queryrole_id);
        $role_id = $rowRole['role_id'];
    }
    $queryRoleManagement = mysqli_query($conn, "SELECT * FROM role_management WHERE id = '$role_id'");
    if(mysqli_num_rows($queryrole_id) > 0){
        $rowRoleManagement = mysqli_fetch_array($queryRoleManagement);
        $result = $rowRoleManagement[$data];
    }
 
    return $result;
}
?>